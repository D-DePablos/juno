# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vm.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x08vm.proto\"\x1e\n\x0fGetValueRequest\x12\x0b\n\x03key\x18\x01 \x01(\x0c\"!\n\x10GetValueResponse\x12\r\n\x05value\x18\x01 \x01(\x0c\"\x92\x02\n\rVMCallRequest\x12\x0c\n\x04root\x18\x01 \x01(\x0c\x12\x18\n\x10\x63ontract_address\x18\x02 \x01(\x0c\x12\x10\n\x08selector\x18\x03 \x01(\x0c\x12\x10\n\x08\x63\x61lldata\x18\x04 \x01(\x0c\x12\x16\n\x0e\x63\x61ller_address\x18\x05 \x01(\x0c\x12\x11\n\tsignature\x18\x06 \x01(\x0c\x12,\n\nblock_info\x18\x07 \x01(\x0b\x32\x18.VMCallRequest.BlockInfo\x1a\\\n\tBlockInfo\x12\x0e\n\x06number\x18\x01 \x01(\x04\x12\x11\n\ttimestamp\x18\x02 \x01(\x04\x12\x11\n\tgas_price\x18\x03 \x01(\x04\x12\x19\n\x11sequencer_address\x18\x04 \x01(\x04\"!\n\x0eVMCallResponse\x12\x0f\n\x07retdata\x18\x01 \x03(\x0c\x32\x43\n\x0eStorageAdapter\x12\x31\n\x08GetValue\x12\x10.GetValueRequest\x1a\x11.GetValueResponse\"\x00\x32/\n\x02VM\x12)\n\x04\x43\x61ll\x12\x0e.VMCallRequest\x1a\x0f.VMCallResponse\"\x00\x42\x37Z5github.com/NethermindEth/juno/internal/services/vmrpcb\x06proto3')



_GETVALUEREQUEST = DESCRIPTOR.message_types_by_name['GetValueRequest']
_GETVALUERESPONSE = DESCRIPTOR.message_types_by_name['GetValueResponse']
_VMCALLREQUEST = DESCRIPTOR.message_types_by_name['VMCallRequest']
_VMCALLREQUEST_BLOCKINFO = _VMCALLREQUEST.nested_types_by_name['BlockInfo']
_VMCALLRESPONSE = DESCRIPTOR.message_types_by_name['VMCallResponse']
GetValueRequest = _reflection.GeneratedProtocolMessageType('GetValueRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETVALUEREQUEST,
  '__module__' : 'vm_pb2'
  # @@protoc_insertion_point(class_scope:GetValueRequest)
  })
_sym_db.RegisterMessage(GetValueRequest)

GetValueResponse = _reflection.GeneratedProtocolMessageType('GetValueResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETVALUERESPONSE,
  '__module__' : 'vm_pb2'
  # @@protoc_insertion_point(class_scope:GetValueResponse)
  })
_sym_db.RegisterMessage(GetValueResponse)

VMCallRequest = _reflection.GeneratedProtocolMessageType('VMCallRequest', (_message.Message,), {

  'BlockInfo' : _reflection.GeneratedProtocolMessageType('BlockInfo', (_message.Message,), {
    'DESCRIPTOR' : _VMCALLREQUEST_BLOCKINFO,
    '__module__' : 'vm_pb2'
    # @@protoc_insertion_point(class_scope:VMCallRequest.BlockInfo)
    })
  ,
  'DESCRIPTOR' : _VMCALLREQUEST,
  '__module__' : 'vm_pb2'
  # @@protoc_insertion_point(class_scope:VMCallRequest)
  })
_sym_db.RegisterMessage(VMCallRequest)
_sym_db.RegisterMessage(VMCallRequest.BlockInfo)

VMCallResponse = _reflection.GeneratedProtocolMessageType('VMCallResponse', (_message.Message,), {
  'DESCRIPTOR' : _VMCALLRESPONSE,
  '__module__' : 'vm_pb2'
  # @@protoc_insertion_point(class_scope:VMCallResponse)
  })
_sym_db.RegisterMessage(VMCallResponse)

_STORAGEADAPTER = DESCRIPTOR.services_by_name['StorageAdapter']
_VM = DESCRIPTOR.services_by_name['VM']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z5github.com/NethermindEth/juno/internal/services/vmrpc'
  _GETVALUEREQUEST._serialized_start=12
  _GETVALUEREQUEST._serialized_end=42
  _GETVALUERESPONSE._serialized_start=44
  _GETVALUERESPONSE._serialized_end=77
  _VMCALLREQUEST._serialized_start=80
  _VMCALLREQUEST._serialized_end=354
  _VMCALLREQUEST_BLOCKINFO._serialized_start=262
  _VMCALLREQUEST_BLOCKINFO._serialized_end=354
  _VMCALLRESPONSE._serialized_start=356
  _VMCALLRESPONSE._serialized_end=389
  _STORAGEADAPTER._serialized_start=391
  _STORAGEADAPTER._serialized_end=458
  _VM._serialized_start=460
  _VM._serialized_end=507
# @@protoc_insertion_point(module_scope)
